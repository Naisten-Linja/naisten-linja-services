export ENVIRONMENT=development
export FRONTEND_PORT=3000
# Backend port
export PORT=9000

# Ask around the team for these 2 values. Alternatively, if you have access to Discourse Admin,
# the sso secret can be found or defined in
# Admin > Settings > Login, and look for `sso provider secrets` field, and copy the secret value for `localhost`
# The API_KEY can be generated in Admin > API (https://online-group-dev.naistenlinja.fi/admin/api/keys)
# The API_USER can be "system".
export DISCOURSE_URL=
export DISCOURSE_SSO_SECRET=
export DISCOURSE_API_KEY=
export DISCOURSE_API_USER=

# Redis as session store.
export REDIS_PORT=6379
export REDIS_URL="redis://localhost:$REDIS_PORT"

# -- SENDGRID --
# Set these variables if you are planning to test sending real emails
export SENDGRID_API_KEY=

# Address and name that the booking related emails for staff/volunteers come from.
export SENDGRID_FROM_EMAIL_ADDRESS="noreply@services-dev.naistenlinja.fi"
export SENDGRID_FROM_EMAIL_NAME="Naisten Linja Bookings"
# Name used for emails that go to customers
export SENDGRID_FROM_EMAIL_NAME_FOR_CUSTOMERS="Reply Notification"

# Dynamic templates to use for different emails
export SENDGRID_VOLUNTEER_BOOKING_CONFIRMATION_TEMPLATE_ID=
export SENDGRID_STAFF_BOOKING_CONFIRMATION_TEMPLATE_ID=
export SENDGRID_VOLUNTEER_BOOKING_REMINDER_TEMPLATE_ID=
export SENDGRID_CUSTOMER_REPLY_NOTIFICATION_TEMPLATE_ID=

# The hour when booking reminder emails will be sent to volunteers
# In development you can set this to "* *" to make the emails run every minute, but then you should also
# remove the SENDGRID api credentials then to not use all of the quota!!
# Unset/comment the environment variable to disable the reminders.
# In production this should be a single number to avoid sending same email multiple times a day.
export BOOKING_REMINDER_SENDING_HOUR=9

# How many days before the day the booking starts we send the reminder email?
# If set to zero, reminders will be sent at "BOOKING_REMINDER_SENDING_HOUR" on
# the exact day when the booking starts, if set to 1 the day before that etc.
# Unset/comment this to disable the reminders.
export BOOKING_REMINDER_DAYS_BEFORE=3

# Set this to true if you'd like to test the notification cron jobs locally
export USE_NOTIFICATION_CRON_JOB=false

# The list of allowed CORS origins requests to the backend API.
# If more than one origins are allowed, they can can separated by a "," - without any space in between.
# For example: http://domain1.com,http://domain2.com
# Currently, this is only needed for sending and reading online letters - due to the requests coming from
# the public website, which uses a different domain. This variable is set in case you'd like to test the
# public website locally - which will use port 8000 by default.
export ALLOWED_ORIGINS=http://localhost:8000

export DB_USERNAME=nl_dev
export DB_PASSWORD=nl_dev
export DB_NAME=nl_dev
export DB_PORT=5433
export DB_HOST=localhost

export COOKIE_SECRET="1Kk9t6sICZxqIBdqSrvsk1SHJHQKJaqH^B&Eu1ebc%QwCQyDguW@9*&X1T5GyAHK"
export JWT_SECRET="M61p@@Okk#RIAPdczSEe3WhVmhtK4MlnlgbRW5AUgPAQcl6%9BSvIYkat1EqvlG8"

# Hex value of letter access key salt. This is used to hash the online letter's access key
export LETTER_ACCESS_KEY_SALT=d35d86248800d53ac5086eb9010f4b830de271acd06235a4a4e52de0ee6afdd6

# Hex value of the aes key used for encrypting and decrypting letter's title, content and its reply
export LETTER_AES_KEY=3e8e98013458a51879e6db9956001a47e2533c065b85fed1d5a80e79b83171de

# Inlucde node_modules binaries into the shell environment
export PATH=$PATH:$(pwd)/node_modules/.bin

# These variables are only required in production:

# export APP_DOMAIN=

# Allow compatibility with peer dependency resolve for packages that don't support npm version 7 and later yet
npm config set legacy-peer-deps true
